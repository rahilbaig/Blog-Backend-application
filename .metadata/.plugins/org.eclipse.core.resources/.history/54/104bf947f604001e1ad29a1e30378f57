package com.rahil.blog.service.impl;

import java.util.Date;
import java.util.List;
import java.util.stream.Collectors;

import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.rahil.blog.entity.Category;
import com.rahil.blog.entity.Post;
import com.rahil.blog.entity.User;
import com.rahil.blog.exceptions.ResourceNotFoundException;
import com.rahil.blog.payload.PostDto;
import com.rahil.blog.repository.CategoryRepo;
import com.rahil.blog.repository.PostRrepo;
import com.rahil.blog.repository.UserRepo;
import com.rahil.blog.service.Postservice;

@Service
public class postServiceImpl implements Postservice{

	@Autowired
	private PostRrepo postRrepo;
	
	@Autowired
	ModelMapper modelMapper;
	
	
	@Autowired
	private UserRepo userRepo;
	
	@Autowired
	private CategoryRepo categoryRepo;
	
	@Override
	public PostDto createPost(PostDto dto,Integer userId,Integer categoryId) {
		
		User user=userRepo.findById(userId).orElseThrow(()->new ResourceNotFoundException("user", "user Id", userId));
		
		Category category=categoryRepo.findById(categoryId).orElseThrow(()-> new ResourceNotFoundException("category", "category id", categoryId));
		
		Post post=this.modelMapper.map(dto, Post.class);
		post.setImageName("default.png");
		post.setAddDate(new Date());
		post.setUser(user);
		post.setCategory(category);
		
		Post newPost=this.postRrepo.save(post);
		
		return this.modelMapper.map(newPost, PostDto.class);
	}

	@Override
	public PostDto updatePost(PostDto dto, Integer id) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void deletePost(Integer id) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public PostDto getPostById(Integer id) {
		Post post=this.postRrepo.findById(id).orElseThrow(()->new ResourceNotFoundException("post", "post is", id));
		PostDto dto=this.modelMapper.map(post, PostDto.class);
		return dto;
	}

	@Override
	public List<PostDto> getAllPost() {
		List<Post>posts=this.postRrepo.findAll();
		List<PostDto> dtos=posts.stream().map(post->this.modelMapper.map(post, PostDto.class)).collect(Collectors.toList());
		return dtos;
	}
	

	@Override
	public List<PostDto> getPostByCategory(Integer categoryId) {
		Category category=this.categoryRepo.findById(categoryId).orElseThrow(()->new ResourceNotFoundException("categor", "category id", categoryId));
	    List<Post> posts=this.postRrepo.findByCategory(category);
		List<PostDto> dtos= posts.stream().map(post->this.modelMapper.map(post, PostDto.class)).collect(Collectors.toList());
		return dtos;
	}

	@Override
	public List<PostDto> getPostByUser(Integer userId) {
		User user=userRepo.findById(userId).orElseThrow(()->new ResourceNotFoundException("user", "user id", userId));
		List<Post> posts=this.postRrepo.findByUser(user);
		List<PostDto> dtos=posts.stream().map(post->this.modelMapper.map(post, PostDto.class)).collect(Collectors.toList());
		return dtos;
	}

	@Override
	public List<PostDto> SearchPosts(String keyword) {
		// TODO Auto-generated method stub
		return null;
	}

}
